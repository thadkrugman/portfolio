---
import Socials from "../common/Socials.astro";

const navItems = [
  { name: "Home", href: "/" },
  { name: "About", href: "/about" },
  { name: "Portfolio", href: "/portfolio" },
  { name: "Blog", href: "blog" },
  { name: "Contact", href: "/contact" },
];
---

<header class="bg-primary h-20 sm:h-24 md:h-28 relative">
  <nav
    class="md:relative mx-auto flex lg:container items-center h-full w-full justify-between md:justify-end pl-0 pr-5 lg:pr-8 max-lg:overflow-hidden"
    aria-label="Global"
  >
    <a
      href="/"
      class="text-white/15 md:absolute top-0 left-0 md:-left-[200px] z-30 md:z-0 text-[10vw] md:text-9xl syne font-bold md:-mt-[22px]"
    >
      Thad&nbsp;Krugman
    </a>
    <div class="flex md:hidden">
      <button
        type="button"
        id="openDrawerBtn"
        class="inline-flex h-8 w-8 items-center justify-center text-content z-20"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-8 w-8 hover:opacity-70"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="2.5"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="square"
            stroke-linejoin="miter"
            d="M4 6h16M4 12h16M12 18h8"></path>
        </svg>
      </button>
    </div>
    <div
      class="border-content text-content hidden md:flex md:gap-x-6 z-10 border-b py-2 syne"
    >
      <a href="/" class="text-2xl font-bold hover:opacity-70"> Thad Krugman </a>
      <span>/</span>
      {
        navItems.slice(1).map((item, index) => (
          <>
            <a class="text-xl font-light hover:opacity-70" href={item.href}>
              {item.name}
            </a>
            {index !== navItems.length - 2 && <span>/</span>}
          </>
        ))
      }
    </div>
    <!-- Mobile menu, show/hide based on menu open state. -->
    <div
      class="bg-black/40 hidden md:hidden flex-col items-end fixed inset-y-0 right-0 w-full overflow-y-auto transform transition-opacity duration-300 ease-in-out opacity-0 overflow-x-hidden z-20"
      role="dialog"
      aria-modal="true"
      id="drawer-bg"
    >
    </div>
    <div
      id="drawer"
      role="dialog"
      aria-modal="true"
      class="bg-primary fixed inset-y-0 right-0 w-full max-w-[328px] h-full md:hidden overflow-y-auto flex flex-col transform transition-transform duration-300 ease-in-out translate-x-full z-30 px-4 py-6 overflow-x-hidden"
    >
      <span
        aria-hidden="true"
        class="select-none fixed top-[533px] -left-[238px] text-9xl font-bold syne -rotate-90 text-white/15"
      >
        Thad&nbsp;Krugman
      </span>
      <div class="flex items-center justify-end z-50">
        <button type="button" class="h-8 w-8 text-accent" id="closeDrawerBtn">
          <span class="sr-only">Close menu</span>
          <svg
            class="h-8 w-8 hover:opacity-70"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="3.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="square"
              stroke-linejoin="miter"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="flex flex-col z-50">
        {
          navItems.map((item, index) => (
            <div
              class={`${index !== navItems.length - 1 && "border-b border-b-transparent-light"}  py-4`}
            >
              <a
                class="text-4xl font-medium text-content syne px-2 hover:opacity-70"
                href={item.href}
              >
                {item.name}
              </a>
            </div>
          ))
        }
      </div>
      <div class="mt-3 text-accent syne text-sm px-2">
        <p class="pb-1">FOLLOW ME</p>
        <Socials useAccentColor={true} />
      </div>
    </div>
  </nav>
</header>

<script>
  const drawer = document.getElementById("drawer") as HTMLElement;
  const drawerBg = document.getElementById("drawer-bg") as HTMLElement;
  const openDrawerBtn = document.getElementById("openDrawerBtn") as HTMLElement;
  const closeDrawerBtn = document.getElementById(
    "closeDrawerBtn",
  ) as HTMLElement;

  openDrawerBtn?.addEventListener("click", () => {
    drawer?.classList.remove("translate-x-full");
    drawerBg?.classList.remove("opacity-0");
    drawerBg?.classList.add("opacity-100");
    drawerBg?.classList.remove("hidden");
    drawerBg?.classList.add("flex");
  });

  closeDrawerBtn?.addEventListener("click", () => {
    drawer?.classList.add("translate-x-full");
    drawerBg?.classList.remove("opacity-100");
    drawerBg?.classList.add("opacity-0");
    drawerBg?.classList.remove("flex");
    drawerBg?.classList.add("hidden");
  });
</script>

<style>
  .select-none {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
</style>
